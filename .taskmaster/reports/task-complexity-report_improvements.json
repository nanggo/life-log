{
  "meta": {
    "generatedAt": "2025-08-05T07:21:36.422Z",
    "tasksAnalyzed": 13,
    "totalTasks": 13,
    "analysisCount": 13,
    "thresholdScore": 4,
    "projectName": "Taskmaster",
    "usedResearch": false
  },
  "complexityAnalysis": [
    {
      "taskId": 1,
      "taskTitle": "태그 페이지 통계 표시 오류 수정",
      "complexityScore": 4,
      "recommendedSubtasks": 3,
      "expansionPrompt": "태그 통계 계산 로직을 구현하고 서버 사이드에서 데이터를 전달하는 작업을 세분화하여 각 단계별로 구현할 수 있도록 하세요.",
      "reasoning": "서버 사이드 데이터 계산과 페이지 전달 로직이 필요하지만 비교적 단순한 통계 계산이므로 중간 난이도입니다."
    },
    {
      "taskId": 2,
      "taskTitle": "window.openImageModal 타입 정의 추가",
      "complexityScore": 2,
      "recommendedSubtasks": 2,
      "expansionPrompt": "TypeScript 전역 타입 정의를 위한 global.d.ts 파일 생성과 Window 인터페이스 확장을 단계별로 구현하세요.",
      "reasoning": "단순한 타입 정의 작업으로 복잡도가 낮으며 빠르게 해결할 수 있는 작업입니다."
    },
    {
      "taskId": 3,
      "taskTitle": "About 페이지 테이블 반응형 문제 해결",
      "complexityScore": 3,
      "recommendedSubtasks": 3,
      "expansionPrompt": "모바일, 태블릿, 데스크톱 각 화면 크기별 테이블 레이아웃 최적화와 CSS 반응형 클래스 적용을 단계별로 구현하세요.",
      "reasoning": "반응형 CSS 작업이 필요하지만 특정 페이지의 테이블 컴포넌트만 수정하면 되므로 중간 정도의 복잡도입니다."
    },
    {
      "taskId": 4,
      "taskTitle": "미사용 VirtualList 컴포넌트 제거",
      "complexityScore": 2,
      "recommendedSubtasks": 2,
      "expansionPrompt": "VirtualList 컴포넌트 파일 삭제와 관련 import 및 타입 정의 제거를 단계별로 진행하여 안전하게 정리하세요.",
      "reasoning": "단순한 코드 삭제 작업으로 위험도가 낮으며 빠르게 완료할 수 있습니다."
    },
    {
      "taskId": 5,
      "taskTitle": "이미지 컴포넌트 최적화 및 통합",
      "complexityScore": 7,
      "recommendedSubtasks": 5,
      "expansionPrompt": "LazyImage와 Image 컴포넌트 분석, 통합 컴포넌트 설계, 지연 로딩 구현, WebP 지원, 레이아웃 시프트 방지 등 각 최적화 기능을 단계별로 구현하세요.",
      "reasoning": "두 컴포넌트의 기능 분석과 통합, 다양한 이미지 최적화 기능 구현이 필요한 복잡한 작업입니다."
    },
    {
      "taskId": 6,
      "taskTitle": "CacheManager 활용도 개선",
      "complexityScore": 5,
      "recommendedSubtasks": 4,
      "expansionPrompt": "포스트 목록, 태그 정보, 정적 콘텐츠별로 CacheManager 적용과 캐시 만료 시간 설정, 무효화 로직을 각각 구현하세요.",
      "reasoning": "기존 CacheManager를 여러 부분에 적용하고 캐시 전략을 수립해야 하는 중간 복잡도의 작업입니다."
    },
    {
      "taskId": 7,
      "taskTitle": "태그 페이지 통계 UI 복원 및 개선",
      "complexityScore": 6,
      "recommendedSubtasks": 4,
      "expansionPrompt": "통계 UI 컴포넌트 설계, 차트/그래프 라이브러리 선택 및 구현, 반응형 디자인 적용, 기존 주석 코드 복원을 단계별로 진행하세요.",
      "reasoning": "UI 컴포넌트 구현과 데이터 시각화, 반응형 디자인이 필요한 중상급 복잡도의 작업입니다."
    },
    {
      "taskId": 8,
      "taskTitle": "모바일 반응형 디자인 전반적 개선",
      "complexityScore": 8,
      "recommendedSubtasks": 6,
      "expansionPrompt": "페이지별 모바일 레이아웃 분석, 컴포넌트별 반응형 개선, 터치 인터페이스 최적화, 스크롤 동작 개선 등을 체계적으로 구현하세요.",
      "reasoning": "전체 사이트의 모바일 최적화가 필요한 대규모 작업으로 높은 복잡도를 가집니다."
    },
    {
      "taskId": 9,
      "taskTitle": "웹 접근성 향상",
      "complexityScore": 7,
      "recommendedSubtasks": 5,
      "expansionPrompt": "ARIA 레이블 추가, 키보드 네비게이션 구현, 색상 대비 개선, 스크린 리더 지원, focus 관리 등 접근성 요소를 단계별로 구현하세요.",
      "reasoning": "WCAG 가이드라인을 따른 포괄적인 접근성 개선이 필요한 고복잡도 작업입니다."
    },
    {
      "taskId": 10,
      "taskTitle": "TypeScript 타입 안전성 강화",
      "complexityScore": 6,
      "recommendedSubtasks": 4,
      "expansionPrompt": "any 타입 분석 및 교체, 인터페이스 강화, strict 모드 활성화, 제네릭 타입 적용을 단계별로 진행하여 타입 안전성을 향상시키세요.",
      "reasoning": "프로젝트 전반의 타입 시스템 개선이 필요한 중상급 복잡도의 작업입니다."
    },
    {
      "taskId": 11,
      "taskTitle": "미사용 코드 및 데드 코드 정리",
      "complexityScore": 4,
      "recommendedSubtasks": 3,
      "expansionPrompt": "ESLint 규칙 설정, 미사용 코드 탐지 및 제거, 코드 중복 제거 및 리팩토링을 체계적으로 진행하세요.",
      "reasoning": "코드 정리 작업이지만 전체 프로젝트를 검토해야 하므로 중간 복잡도의 작업입니다."
    },
    {
      "taskId": 12,
      "taskTitle": "에러 처리 및 사용자 경험 개선",
      "complexityScore": 5,
      "recommendedSubtasks": 4,
      "expansionPrompt": "비동기 함수 에러 처리 강화, 사용자 친화적 에러 메시지 구현, 에러 바운더리 설정, 네트워크 에러 처리를 각각 구현하세요.",
      "reasoning": "다양한 에러 상황에 대한 포괄적인 처리가 필요한 중간 복잡도의 작업입니다."
    },
    {
      "taskId": 13,
      "taskTitle": "포스트 검색 기능 구현",
      "complexityScore": 8,
      "recommendedSubtasks": 6,
      "expansionPrompt": "검색 UI 설계, 검색 알고리즘 구현, 인덱싱 최적화, 결과 하이라이팅, 자동완성, 검색 히스토리 등 각 기능을 단계별로 구현하세요.",
      "reasoning": "검색 엔진 구현, UI/UX, 성능 최적화가 모두 필요한 대규모 기능 개발로 높은 복잡도를 가집니다."
    }
  ]
}
